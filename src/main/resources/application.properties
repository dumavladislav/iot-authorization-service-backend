
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.url=${DB_URL}
spring.datasource.username= ${DB_USR}
spring.datasource.password= ${DB_PASSWORD}


spring.datasource.tomcat.validation-query=SELECT 1
spring.datasource.tomcat.validation-query-timeout=5000
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.test-on-connect=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.continue-on-error=true
spring.datasource.tomcat.continue-on-error=true


# Hikari will use the above plus the following to setup connection pooling
spring.datasource.hikari.minimumIdle=0
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000

#spring.datasource.hikari.minimum-idle: 0
#spring.datasource.hikari.initialization-fail-timeout: -1
#spring.datasource.continue-on-error: true
#spring.datasource.driver-class-name: org.postgresql.Driver
#spring.jpa.database-platform: org.hibernate.dialect.PostgreSQLDialect

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect


# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update



server.port=9090